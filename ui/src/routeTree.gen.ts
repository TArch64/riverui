/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from "./routes/__root"
import { Route as QueuesImport } from "./routes/queues"
import { Route as JobsImport } from "./routes/jobs"
import { Route as IndexImport } from "./routes/index"
import { Route as QueuesIndexImport } from "./routes/queues/index"
import { Route as JobsIndexImport } from "./routes/jobs/index"
import { Route as WorkflowsWorkflowIdImport } from "./routes/workflows/$workflowId"
import { Route as QueuesNameImport } from "./routes/queues/$name"
import { Route as JobsJobIdImport } from "./routes/jobs/$jobId"
import { Route as AboutAboutImport } from "./routes/about/about"

// Create/Update Routes

const QueuesRoute = QueuesImport.update({
  path: "/queues",
  getParentRoute: () => rootRoute,
} as any)

const JobsRoute = JobsImport.update({
  path: "/jobs",
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any)

const QueuesIndexRoute = QueuesIndexImport.update({
  path: "/",
  getParentRoute: () => QueuesRoute,
} as any)

const JobsIndexRoute = JobsIndexImport.update({
  path: "/",
  getParentRoute: () => JobsRoute,
} as any)

const WorkflowsWorkflowIdRoute = WorkflowsWorkflowIdImport.update({
  path: "/workflows/$workflowId",
  getParentRoute: () => rootRoute,
} as any)

const QueuesNameRoute = QueuesNameImport.update({
  path: "/$name",
  getParentRoute: () => QueuesRoute,
} as any)

const JobsJobIdRoute = JobsJobIdImport.update({
  path: "/$jobId",
  getParentRoute: () => JobsRoute,
} as any)

const AboutAboutRoute = AboutAboutImport.update({
  path: "/about/about",
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    "/jobs": {
      preLoaderRoute: typeof JobsImport
      parentRoute: typeof rootRoute
    }
    "/queues": {
      preLoaderRoute: typeof QueuesImport
      parentRoute: typeof rootRoute
    }
    "/about/about": {
      preLoaderRoute: typeof AboutAboutImport
      parentRoute: typeof rootRoute
    }
    "/jobs/$jobId": {
      preLoaderRoute: typeof JobsJobIdImport
      parentRoute: typeof JobsImport
    }
    "/queues/$name": {
      preLoaderRoute: typeof QueuesNameImport
      parentRoute: typeof QueuesImport
    }
    "/workflows/$workflowId": {
      preLoaderRoute: typeof WorkflowsWorkflowIdImport
      parentRoute: typeof rootRoute
    }
    "/jobs/": {
      preLoaderRoute: typeof JobsIndexImport
      parentRoute: typeof JobsImport
    }
    "/queues/": {
      preLoaderRoute: typeof QueuesIndexImport
      parentRoute: typeof QueuesImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  JobsRoute.addChildren([JobsJobIdRoute, JobsIndexRoute]),
  QueuesRoute.addChildren([QueuesNameRoute, QueuesIndexRoute]),
  AboutAboutRoute,
  WorkflowsWorkflowIdRoute,
])

/* prettier-ignore-end */
